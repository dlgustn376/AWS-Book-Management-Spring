<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toyproject.bookmanagement.repository.UserRepository">

    <resultMap type="com.toyproject.bookmanagement.entity.User" id="userMap">
      <id property="userId" column="user_id"/>
      <result property="email" column="email"/>
      <result property="password" column="password"/>
      <result property="name" column="name"/>
      <result property="provider" column="provider"/>
      <collection property="authorities" javaType="list" resultMap="authorityMap"/>
    </resultMap>
    
    <resultMap type="com.toyproject.bookmanagement.entity.Authority" id="authorityMap">
      <id property="authorityId" column="authority_id"/>
      <id property="userId" column="user_id"/>
      <id property="roleId" column="role_id"/>
      <association property="role" resultMap="roleMap"/>     
    </resultMap>
    
    <resultMap type="com.toyproject.bookmanagement.entity.Role" id="roleMap">
      <id property="roleId" column="role_id"/>
      <result property="roleName" column="role_name"/>
    </resultMap>
	
	<insert id="saveUser" 
	   parameterType="com.toyproject.bookmanagement.entity.User">
	   insert into user_tb
		value(0,)
	</insert>
	
	<insert id="addAuthorities" parameterType="list" >
	insert into 
	        authority_tb
	value
	<foreach collection="list" item="authority" separator=",">
	
	(0, #{authority.userId}, #{authorityroleId})
	</foreach>
	</insert>
	
    <select id="findUserByEmail"  resultMap="userMap">
          select
				um.user_id,
				um.email,
				um.password,
				um.name,
				um.provider,

				am.authority_id,
    			am.user_id,
    			am.role_id,
	    
    			rm.role_id,
    			rm.role_name
		from
				user_tb um
				left outer join authority_tb am on(am.user_id = um.user_id)
				left outer join role_tb rm on(rm.role_id = am.role_id)
		where
				um.email = #{email}
    </select>

</mapper>